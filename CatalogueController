//defines various endpointsfor  managing coupons in a catalog
package com.dealsapp.catalogue_mcs.controller;//declares package name for the mc class

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
//These lines import the required classes for the controller, including Spring Web annotations and necessary dependencies.

import com.dealsapp.catalogue_mcs.entity.Coupons;
import com.dealsapp.catalogue_mcs.service.CatalogueService;



@RestControllerresponsible // for handling HTTP requests and returning JSON responses.
@RequestMapping("/catalogue") //annotation sets the base URL path for the controller's endpoints.
public class CatalogueController {
	@Autowired //annotation enables dependency injection of the CatalogueService
	           // bean, allowing the controller to use its methods for handling requests.
	CatalogueService catalogueService;//bean  the objects that form the backbone of your application and
	// that are managed by the Spring IoC container are called beans


	
	
	@PostMapping("/add")
	public String addCoupon(@RequestBody Coupons deal) { //t receives a JSON payload containing a Coupons object in the request body. The @RequestBody annotation maps the request body to the deal parameter.
		 
		return catalogueService.save(deal);//It then calls the save method of the CatalogueService to add the coupon to the catalog.
	}
	//imp
	// handles http post request containing coupons obj in request body

	/**
	 * To get catalog according to id
	 * @param couponId The id of the coupon
	 * @return the coupons according to the id
	 * @CreatedOn 31/08/2022
	 * @UpdatedOn 01/09/2022
	 */
	@GetMapping("/find/id/{couponId}")
	public Optional<Coupons> searchCouponByCouponId(@PathVariable("couponId") String couponId) {
		Optional<Coupons> coupons = catalogueService.findByCouponId(couponId);
		return coupons;
	}
